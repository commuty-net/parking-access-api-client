import static java.lang.System.getenv

plugins {
    id "idea"
    id "java-library"
    id "maven-publish"
    id "groovy"
    id "signing"
    id "org.sonarqube" version "$sonarqubeVersion"
    id "com.github.ben-manes.versions" version "$outdatedVersion"
}

group "net.commuty"
version "2.6.1"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation (
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion",
            "org.slf4j:slf4j-api:$slf4jVersion"
    )

    testImplementation (
            "org.spockframework:spock-core:$spockVersion",
            "org.codehaus.groovy:groovy-all:$groovyVersion",
            "org.mock-server:mockserver-netty:$mockServerVersion",
            "ch.qos.logback:logback-classic:$logbackVersion"
    )
}

java.modularity.inferModulePath = false

compileJava {
    exclude "module-info.java"
    options.compilerArgs = ["--release", "8"]
}

task compileModuleInfoJava(type: JavaCompile) {
    classpath = files()
    source = "src/main/java/module-info.java"
    destinationDir = compileJava.destinationDir
    doFirst {
        options.compilerArgs = [
                "--release", "9",
                "--module-path", compileJava.classpath.asPath,
        ]
    }
}

compileModuleInfoJava.dependsOn compileJava
classes.dependsOn compileModuleInfoJava

jar {
    archiveBaseName = "parking-access-api-client"

    manifest {
        attributes "Implementation-Version": archiveVersion, "provider": gradle
    }
}

test {
    useJUnitPlatform()
}

javadoc {
    exclude "module-info.java"
    doFirst {
        options.addStringOption("Xdoclint:none", "-quiet")
    }
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html5", true)
    }
}

sonarqube {
    properties {
        property "sonar.host.url", getenv("SONARQUBE_URL")
        property "sonar.login", getenv("SONARQUBE_TOKEN")
        property "sonar.gitlab.commit_sha", getenv("CI_COMMIT_SHA")
        property "sonar.gitlab.ref_name", getenv("CI_COMMIT_REF_NAME")
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.test.exclusions", "**/src/test/**/*,**/src/main/java/module-info.java"
        property "sonar.verbose", "false"
        property "sonar.projectKey", "nedap"
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

def sonatypeUsername = hasProperty("ossrhUser") ? ossrhUser : System.getenv("ossrhUser")
def sonatypePassword = hasProperty("ossrhPassword") ? ossrhPassword : System.getenv("ossrhPassword")

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "parking-access-api-client"
            from components.java
            versionMapping {
                usage("java-api") {
                    fromResolutionOf("runtimeClasspath")
                }
                usage("java-runtime") {
                    fromResolutionResult()
                }
            }
            pom {
                name = project.name
                description = "This package acts as a client to communicate with the Commuty Parking Access API. It avoids you to deal with HTTP directly and provides you proper data structures to work with the API."
                url = "https://www.commuty.net"
                licenses {
                    license {
                        name = "The MIT License (MIT)"
                        url = "http://opensource.org/licenses/MIT"
                    }
                }
                developers {
                    developer {
                        id = "commuty"
                        name = "Commuty SA"
                        email = "support@commuty.net"
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/commuty-net/parking-access-api-client"
                    developerConnection = "scm:git:git@github.com:commuty-net/parking-access-api-client.git"
                    url = "https://github.com/commuty-net/parking-access-api-client"
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            allowInsecureProtocol=true
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
